<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:helpers="clr-namespace:Zoranof.UI.Wpf.Helpers">

        <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="pack://application:,,,/Zoranof.UI.Wpf;component/Resources.xaml"/>
        </ResourceDictionary.MergedDictionaries>

        <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Height" Value="36" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="helpers:ButtonHelper.CornerRadius" Value="2" />
        <Setter Property="helpers:IconHelper.IconSize" Value="16" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource ColorGray0}" />
        <Setter Property="Padding" Value="10 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button" >
                    <Border Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            Cursor="{TemplateBinding Cursor}"
                            CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ButtonHelper.CornerRadius)}"
                            ClipToBounds="True">
                        <Grid Background="Transparent"  VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:IconHelper.Icon)}" 
                                            FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:IconHelper.IconSize)}"
                                           FontFamily="{StaticResource IconFontFamily}" 
                                           Foreground="{TemplateBinding Foreground}"/>
                                <Border Width="5" Background="Transparent">
                                    <Border.Visibility>
                                        <MultiBinding Converter="{StaticResource Nulls2VisibilityConverter}">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(helpers:IconHelper.Icon)"/>
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Content"/>
                                        </MultiBinding>
                                    </Border.Visibility>
                                </Border>
                                <TextBlock Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"></TextBlock>
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.9"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="0.7" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" x:Key="PrimaryButtonStyle" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{DynamicResource ThemeColor}" />
        <Setter Property="Foreground" Value="{DynamicResource ColorGrayA}" />
    </Style>

    <Style x:Key="DefaultButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Foreground" Value="{DynamicResource ActiveTextColor}" />
        <Setter Property="BorderThickness" Value="2" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ThemeColor}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ThemeColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
    </Style>

    <Style x:Key="TextButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Opacity" Value="0.6" />
        <Setter Property="Foreground" Value="{DynamicResource ActiveTextColor}" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeColor}" />
        
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LinkButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeColor}" />
    </Style>
</ResourceDictionary>